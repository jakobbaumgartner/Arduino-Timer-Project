CONNECT DISPLAY	

I first started with figuring out how to connect display. I had more trouble than I care to admit, because I have never done anything like it before. However as per usual with arduino, everything is mostly straight forward. 

I say mostly, because display uses SPI protocol for communication. This protocol needs address of device, which for some reason wasn't the same as it was mentioned in specifications. It took me a while, but once I figured out to use handy (arduino) WIRE library to check for it, it was solved.


###########################################################################################################################
CONNECT SD CARD

Pretty straight forward, except not ... The thing is that SD cards are getting kind of rare this days, so I had in my drawer only one tiny 16MB one, which uses formating FAT8 and can't be formatted to FAT16. This SD card reader doesn't want to read FAT8. So I tried SD card from my phone (16GB), which was ofcourse too big for this reader to read it. Finally I got some card which is like 2GB from my brother and it finally worked. 

https://www.arduino.cc/en/Reference/SD
https://forum.arduino.cc/index.php?topic=165170.0


###########################################################################################################################
BREAKING CODE INTO FILES

File structure:
-> main
-> data
-> display


###########################################################################################################################
SETTINGS FILE

All right, now I need some kind of data with which I can set different 'projects' that I want to record time on.
I am gonna use a file on SD card, that program will automatically read every time the controler starts and set categorys in its memory. Up to 5 categorys.

-------------------------------------------------------------------
'projects_file.txt'
-------------------------------------------------------------------
1;ModulB_LAB#
2;ModulB_P#
3;IntLes#
4;Game#
-------------------------------------------------------------------


It would be prettier and better to use json, but I guess it doesn't really matter in this case, might be even better not to use it since Arduino has limited memory. 

The thing is that C++ sux and I am starting to hate it deeply. It's creator Bjorne must have really hated developers when he created it. Compared to python or javascript it just sux. Also it has been a while since I created anything in it so ...

So it turns out that File.read() returns buffer I don't know, charater by character? I don't like it, I like strings. Of course Arduino documentation doesn't mention it, but in the Stream documentation, on which Arduino SD is based is mentioned method readString() which reads buffer to String. Thankfully it is implemented / works in SD library also.

Okay, we have got projects. I am more than a bit rusty in C++, also Arduino C++ is a bit different I think. However it is (slowly) comming back to me. I allocated a list of strings and returned a pointer to it from function (not sure if there is actually another way to do it in C++, who cares, it works).


###########################################################################################################################
DATA STRUCTURE

We need some kind of file to save the recorded data. Actually I want two different files. One to save input for each session and one to save total time for each project.

Lets call them: 'stats.txt' and 'sessions.txt'.

-------------------------------------------------------------------
'stats.txt'
-------------------------------------------------------------------
PROJECTID ; MINUTES #
1;25#
2;5#
3;0#
4;41#
5;0#
-------------------------------------------------------------------

-------------------------------------------------------------------
'sessions.txt'
-------------------------------------------------------------------
SESSIONID # PROJECTID $ MINUTES#
1;2$23#
2;2$3#
3;44$5#


###########################################################################################################################
PROBLEM: SD card dead

Writing / Reading not working. Not sure why, could be SD card, could be reader, could be smtg else. I think I saw somewhere that this SD reader has a habit of destroying cards, could just be an old card ... Fuck me.

Steps to fix it:
1. format  --- MAYBE
2. try another SD reader   --- MAYBE
(After formating I forgot to change SD pin in code.)
( 3. get a new SD card )
( 4. cry in corner )

HULLY SHIT ... it is fixed. What was the bug? Well one of the above probably. Not sure which. Who gives a shit, it works

Okay, soooo next task. Get ID to write to a new file. Read/Write seems to be working. The problem now is that I need to delete old input. 

We are gonna read the old data, than delete the file and create new input with new ID. If we lose power in the exact moment we will lose ID. However this is an edge case, lets just leave it at that.

SHIIIT, it works. :)


###########################################################################################################################
CONNECT BUTTONS AND LED DIODS

Blue LED pins: 28 30 32 34 36
Red LED pin: 31
Button MODE: 2
Button MENU: 3
Button PREVIOUS: 4
Button NEXT: 5
Button CONFIRM: 12

Connected all buttons and led diods. Decided to go with a blue-white buttons look and blue diods, with one additional red one, for SD status or errors.


###########################################################################################################################
BUTTON PRESSED FUNCTION 

Okay let's first implement the ''buttonPressed()'' function. It should show the number of pressed button in serial monitor.

That works, alright. Up next ... some kind of buffer register, that prevents button bouncing. (debouncing).

Lets implement two modes. First one just prevents presses for the next some ms. The second one kind of works as a long press. It uses shift buffer and the sum of buffer must me more than smtg for button to be activated.

While delays are awful in sistems, they shouldn't be problematic in this one. So buttons get 250ms delays to prevent bouncing, also button '12' gets shifting register.


###########################################################################################################################
LED DIODS

Setted pinMode for all LED diods and tested them. They all work. They are a bit dim, probably the resistors are a bit too strong, but for now I will just let it be. In fact I might just leave it as it is, because I hate too strong LED diods on devices. It becomes distracting.




